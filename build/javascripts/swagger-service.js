function SwaggerService(a,b,c){function i(){window.console&&console.log.apply(console,arguments)}function j(a){i("ERROR: "+a)}function k(a){f(a)}function l(a,b){return a.indexOf(b,a.length-b.length)!==-1}if(!a)throw new Error("discoveryUrl must be passed while creating SwaggerService");a=jQuery.trim(a);if(a.length==0)throw new Error("discoveryUrl must be passed while creating SwaggerService");a.indexOf("/")!=0&&a.toLowerCase().indexOf("http:")!=0&&a.toLowerCase().indexOf("https:")!=0&&(a="http://"+a);var d=null,e=".{format}",f=c,g=b,h="";g&&(g=jQuery.trim(g),g.length>0&&(h="?api_key="+g)),this.ApiResource=function(){return m},this.apiHost=function(){return d},this.formatString=function(){return e};var m=Spine.Model.setup("ApiResource",["name","baseUrl","path","path_json","path_xml","description","apiLists","modelList"]);m.include({path_json:null,path_xml:null,init:function(a){a&&this.load(a),this.name=this.path.replace(".{format}","").replace(/\//g,"_"),this.path_json=this.path.replace("{format}","json"),this.path_xml=this.path.replace("{format}","xml"),this.baseUrl=d,this.apiList=n.sub(),this.modelList=s.sub()},addApis:function(a,b){this.apiList.createAll(a),this.apiList.each(function(a){a.setBaseUrl(b)})},addModel:function(a){this.modelList.create(a)},toString:function(){return this.path_json+": "+this.description}});var n=Spine.Model.setup("Api",["baseUrl","path","path_json","path_xml","name","description","operations","path_json","path_xml"]);n.include({init:function(a){a&&this.load(a);var b=this.path.lastIndexOf("/");this.name=this.path.substr(0,b).replace(".{format}","").replace(/\//g,"_");var c=this.path.indexOf("/",1);if(c>0){var d=this.path.substr(0,c),e=this.path.substr(c,this.path.length);this.path_json=d.replace("{format}","json")+e,this.path_xml=d.replace("{format}","xml")+e}else this.path_json=this.path.replace("{format}","json"),this.path_xml=this.path.replace("{format}","xml");var f=this.operations;this.operations=o.sub();if(f){for(var g=0;g<f.length;g++){var h=f[g];h.apiName=this.name,h.path=this.path,h.path_json=this.path_json,h.path_xml=this.path_xml}this.operations.refresh(f)}k("Loading "+this.path+"...")},setBaseUrl:function(a){this.baseUrl=a,this.operations.each(function(b){b.baseUrl=a})},toString:function(){var a="";for(var b=0;b<this.operations.all().length;b++){var c=this.operations.all()[b];a.length>0&&(a+=", "),a+=c.toString()}return this.path_json+"- "+this.operations.all().length+" operations: "+a}});var o=Spine.Model.setup("ApiOperation",["baseUrl","path","path_json","path_xml","summary","notes","deprecated","open","httpMethod","httpMethodLowercase","nickname","responseClass","parameters","apiName"]);o.include({init:function(a){a&&this.load(a),this.httpMethodLowercase=this.httpMethod.toLowerCase();var b=this.parameters;this.parameters=p.sub(),b&&this.parameters.refresh(b)},toString:function(){var a="(";for(var b=0;b<this.parameters.all().length;b++){var c=this.parameters.all()[b];a.length>1&&(a+=", "),a+=c.toString()}return a+=")","{"+this.path_json+"| "+this.nickname+a+": "+this.summary+"}"},invocationData:function(a){var b=new Object;for(var c=0;c<a.length;c++){var d=a[c];d.value&&jQuery.trim(d.value).length>0&&(b[d.name]=d.value)}var e=this.path_json.split("{").join("${"),f=$.template(null,e),h=$.tmpl(f,b)[0].data,i={};return g&&(g=jQuery.trim(g),g.length>0&&(i.api_key=g)),this.parameters.each(function(a){var c=jQuery.trim(b[a.name]);a.paramType=="query"&&c.length>0&&(i[a.name]=b[a.name])}),h=this.baseUrl+h,{url:h,queryParams:i}}});var p=Spine.Model.setup("ApiParameter",["name","description","required","dataType","allowableValues","paramType","allowMultiple"]);p.include({init:function(a){a&&this.load(a),this.name=this.name||this.dataType;if(this.allowableValues){var b=this.allowableValues;b.valueType=="LIST"?this.allowableValues=q.sub():b.valueType=="RANGE"&&(this.allowableValues=r.sub()),b&&(this.allowableValues=this.allowableValues.create(b))}},toString:function(){return this.allowableValues?this.name+": "+this.dataType+" "+this.allowableValues:this.name+": "+this.dataType}});var q=Spine.Model.setup("AllowableListValues",["valueType","values"]);q.include({init:function(a){a&&this.load(a),this.name="allowableValues"},toString:function(){return this.values?"["+this.values+"]":""}});var r=Spine.Model.setup("AllowableRangeValues",["valueType","inclusive","min","max"]);r.include({init:function(a){a&&this.load(a),this.name="allowableValues"},toString:function(){return this.min&&this.max?"["+min+","+max+"]":""}});var s=Spine.Model.setup("ApiModel",["id","fields"]);s.include({init:function(a){a&&this.load(a);if(!this.fields){var b=this.properties;this.fields=t.sub();for(var c in b)if(c!="parent"){var d=b[c];d.name=c,d.id=Spine.guid(),this.fields.create(d)}}},toString:function(){var a="";a+="(";for(var b=0;b<this.fields.all().length;b++){var c=this.fields.all()[b];a.length>1&&(a+=", "),a+=c.toString()}return a+=")",this.required?this.id+" (required): "+a:this.id+": "+a}});var t=Spine.Model.setup("ApiModelProperty",["name","required","dataType"]);t.include({init:function(a){a&&this.load(a),this.dataType||(a.type=="any"?this.dataType="object":a.type=="array"?a.items?a.items.$ref?this.dataType="array["+a.items.$ref+"]":this.dataType="array["+a.items.type+"]":this.dataType="array":this.dataType=a.type)},toString:function(){return this.required?this.name+": "+this.dataType+" (required)":this.name+": "+this.dataType}});var u=Spine.Controller.create({countLoaded:0,proxied:["fetchResources","loadResources","apisLoaded","modelsLoaded"],discoveryUrlList:[],discoveryUrlListCursor:0,init:function(){this.fetchEndpoints()},fetchEndpoints:function(){k("Fetching API List...");var b=l(a,"/")?a.substr(0,a.length-1):a;l(b,"/resources.json")?b=b.substr(0,b.length-"/resources.json".length):l(b,"/resources")&&(b=b.substr(0,b.length-"/resources".length)),this.discoveryUrlList.push(a),this.discoveryUrlList.push(b),this.discoveryUrlList.push(b+"/resources.json"),this.discoveryUrlList.push(b+"/resources"),i("Will try the following urls to discover api endpoints:");for(var c=0;c<this.discoveryUrlList.length;c++)i(" > "+this.discoveryUrlList[c]);this.fetchEndpointsSeq()},fetchEndpointsSeq:function(){var a=this;if(this.discoveryUrlListCursor<this.discoveryUrlList.length){var b=this.discoveryUrlList[this.discoveryUrlListCursor++];k("Fetching API List from "+b),i("Trying url "+b),$.getJSON(b+h,function(a){}).success(function(b){i("Setting globalBasePath to "+b.basePath),d=b.basePath,d=l(d,"/")?d.substr(0,d.length-1):d,m.createAll(b.apis),a.fetchResources(b.basePath)}).error(function(b){a.fetchEndpointsSeq()})}else{i("Error with resource discovery. Exhaused all possible endpoint urls");var c="";for(var e=0;e<this.discoveryUrlList.length;e++)c=c+"<br/>"+this.discoveryUrlList[e];k("Unable to fetch API Listing. Tried the following urls:"+c)}},fetchResources:function(a){i("fetchResources: basePath = "+a);for(var b=0;b<m.all().length;b++){var c=m.all()[b];this.fetchResource(c)}},fetchResource:function(a){var b=this;k("Fetching "+a.name+"...");var c=d+a.path_json+h;i("resourceUrl: %o",c),$.getJSON(c,function(c){b.loadResources(c,a)})},loadResources:function(a,b){try{this.countLoaded++,a.apis&&b.addApis(a.apis,a.basePath);if(a.models)for(var c in a.models){var d=a.models[c];b.addModel(d)}k()}finally{this.countLoaded==m.count()&&m.trigger("refresh")}}});this.init=function(){this.modelController=u.init()}};